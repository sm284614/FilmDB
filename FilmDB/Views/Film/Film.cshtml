@model IEnumerable<Film>
@{
	ViewData["Title"] = "Films";
}
<div class="container">
	<div class="d-flex justify-content-between align-items-center">
		<h1>Film List</h1>
@* 		<form asp-controller="Film" asp-action="FilmSearch" method="get" class="d-flex">
			<input id="filmSearch" type="text" name="query" class="form-control me-2" placeholder="Search by title" required />
			<button type="submit" class="btn btn-primary">Search</button>
		</form> *@
		<form id="filmSearchForm" class="d-flex">
			<input type="text" id="filmSearchQuery" class="form-control me-2" placeholder="Search by title" required />
			<button type="submit" class="btn btn-primary">Search</button>
		</form>

	</div>
	@if (ViewBag.GenreList != null)
	{
		<div class="col-12 mx-auto">
			@foreach (Genre genre in ViewBag.GenreList)
			{
				<a data-id="@genre.GenreId" class="btn genre-button btn-secondary w-8 m-x">
					@genre.Name
				</a>
			}
		</div>
	} 
	<div id="filmTableContainer" class="filmTable">
		@* @await Html.PartialAsync("_FilmTable", (IEnumerable<Film>)Model) *@
	</div>
</div>
<script>
	document.addEventListener("DOMContentLoaded", function () {
		let selectedGenres = []; // Store selected genre IDs

		document.querySelectorAll(".genre-button").forEach(button => {
			button.addEventListener("click", function () {
				const genreId = parseInt(this.dataset.id);

				// Toggle genre selection
				if (selectedGenres.includes(genreId))
				{
					selectedGenres = selectedGenres.filter(id => id !== genreId); // Remove if already selected
					this.classList.remove("btn-primary");
					this.classList.add("btn-secondary"); // Highlight selected
				}
				else
				{
					selectedGenres.push(genreId); // Add if not selected
					this.classList.remove("btn-secondary"); // Reset color
					this.classList.add("btn-primary");
				}
				updateFilmTable();
			});
		});

		function updateFilmTable() {
			const queryString = selectedGenres.length > 0 ? `?genreIds=${selectedGenres.join("&genreIds=")}` : "";
			fetch(`/Film/FilterFilmsByGenre${queryString}`)
				.then(response => response.text())
				.then(data => {
					document.getElementById("filmTableContainer").innerHTML = data;
				})
				.catch(error => console.error("Error loading films:", error));
		}

		document.getElementById("filmSearchForm").addEventListener("submit", function (event) {
			event.preventDefault(); // Prevent full page reload
			const query = document.getElementById("filmSearchQuery").value;
			fetch(`/Film/FilmSearch?query=${encodeURIComponent(query)}`)
				.then(response => response.text())
				.then(data => {
					document.getElementById("filmTableContainer").innerHTML = data;
				})
				.catch(error => console.error("Error loading films:", error));
		});
	});
</script>